#include "sierpinskicurve.h"

short SierpinskiCurve::getN() const
{
    return n;
}

void SierpinskiCurve::setN(short newN)
{
    n = newN;
}

int SierpinskiCurve::getInitialLenght() const
{
    return initialLenght;
}

void SierpinskiCurve::setInitialLenght(int newInitialLenght)
{
    initialLenght = newInitialLenght;
}

void SierpinskiCurve::typeA(short n)
{
    if (n > 0) {
        typeA(n-1); // –≤–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –≤ —ç—Ç–æ—Ç –∂–µ —Ç–∏–ø
        // –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –ª–∏–Ω–∏—é –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ –≤–Ω–∏–∑ –∏ –≤–ø—Ä–∞–≤–æ ü°¶
        currentPos = nextPos;
        nextPos.setX(nextPos.x() + lineLenght/(sqrt(2)));
        nextPos.setY(nextPos.y() + lineLenght/(sqrt(2)));
        lines.append(QLineF(currentPos, nextPos));
        emit newLineReady(lines.dequeue()); // —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–æ–≤–∞—Ç—å
        thread()->sleep(pause); // –µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        typeB(n-1); // –≤–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ç–∏–ø –í
        // –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –ª–∏–Ω–∏—é –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –≤–ø—Ä–∞–≤–æ ->
        currentPos = nextPos;
        nextPos.setX(nextPos.x() + lineLenght * 2);
        lines.append(QLineF(currentPos, nextPos));
        emit newLineReady(lines.dequeue()); // —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–æ–≤–∞—Ç—å
        thread()->sleep(pause); // –µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        typeD(n-1); // –≤–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ç–∏–ø D
        // –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –ª–∏–Ω–∏—é –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ –≤–ø—Ä–∞–≤–æ –∏ –≤–≤–µ—Ä—Ö ü°•
        currentPos = nextPos;
        nextPos.setX(nextPos.x() + lineLenght/(sqrt(2)));
        nextPos.setY(nextPos.y() - lineLenght/(sqrt(2)));
        lines.append(QLineF(currentPos, nextPos));
        emit newLineReady(lines.dequeue()); // —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–æ–≤–∞—Ç—å
        thread()->sleep(pause); // –µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        typeA(n-1); // –≤–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ç–∏–ø –ê
    }
}

SierpinskiCurve::SierpinskiCurve(QObject *parent)
    : QObject{parent}
{

}
