#ifndef SIERPINSKICURVE_H
#define SIERPINSKICURVE_H

#include "irecursivecurve.h"

using namespace  std;

///
/// \brief The SierpinskiCurve class
/// –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è
/// –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—Ä–∏–≤–æ–π –°–µ—Ä–ø–∏–Ω—Å–∫–æ–≥–æ n-–ø–æ—Ä—è–¥–∫–∞
/// –Ω–∏–∂–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω—ã —á–µ—Ç—ã—Ä–µ –ø–æ-—Ä–∞–∑–Ω–æ–º—É –ø–æ–≤–µ—Ä–Ω—É—Ç—ã–µ
/// –≤–∞—Ä–∏–∞–Ω—Ç—ã –±–∞–∑–æ–≤–æ–π –∫—Ä–∏–≤–æ–π (–∫–æ—Ç–æ—Ä–∞—è –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ —Å–∫–æ–±–∞,
/// —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Ç—Ä–µ—Ö –ø—Ä—è–º—ã–π –ª–∏–Ω–∏–π, –∫—Ä–∞–π–Ω–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–≤—Ä–µ–Ω—É—Ç—ã
/// –Ω–∞ 45% –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ø—Ä—è–º–æ–π), –∞ —à–∞–≥–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
/// —Å–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã —Å—Ç—Ä–µ–ª–∫–∞–º–∏, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
/// A: A ü°¶ B ‚Üí D ü°• A
/// B: B ü°ß C ‚Üì A ü°¶ B
/// C: C ü°§ D ‚Üê B ü°ß C
/// D: D ü°• A ‚Üë C ü°§ D
class SierpinskiCurve : public QObject,
                        public IRecursiveCurve
{
    Q_OBJECT

private:
    long pause; // –ø–∞—É–∑–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    short n; // –ø–æ—Ä—è–¥–æ–∫ –∫—Ä–∏–≤–æ–π
    int initialLenght; // –∏–∑–Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –¥–ª–∏–Ω–∞ –ø—Ä—è–º–æ–π –¥–ª—è –∫—Ä–∏–≤–æ–π
    double lineLenght; // –¥–ª–∏–Ω–∞ –ø—Ä—è–º–æ–π –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏–≤–æ–π
    QPointF currentPos; // –Ω–∞—á–∞–ª–æ —Ç–µ–∫—É—â–µ–π –ª–∏–Ω–∏–∏
    QPointF nextPos; // –∫–æ–Ω–µ—Ü —Ç–µ–∫—É—â–µ–π –ª–∏–Ω–∏–∏
    QQueue<QLineF> lines; // –æ—á–µ—Ä–µ–¥—å –∏–∑ –ø—Ä—è–º—ã—Ö

    ///
    /// \brief typeA
    /// —Å–æ–∑–¥–∞–µ—Ç –∫—Ä–∏–≤—É—é –°–µ—Ä–ø–∏–Ω—Å–∫–æ–≥–æ –∫–∞–∫ –Ω–∞ —Å—Ö–µ–º–µ –∏
    /// –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–ª–∞—Å—Å–∞ (A: A ü°¶ B ‚Üí D ü°• A)
    void typeA(short n) override;
    ///
    /// \brief typeB
    /// —Å–æ–∑–¥–∞–µ—Ç –∫—Ä–∏–≤—É—é –°–µ—Ä–ø–∏–Ω—Å–∫–æ–≥–æ –∫–∞–∫ –Ω–∞ —Å—Ö–µ–º–µ –∏
    /// –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–ª–∞—Å—Å–∞ (B: B ü°ß C ‚Üì A ü°¶ B)
    void typeB(short n) override;

public:
    explicit SierpinskiCurve(QObject *parent = nullptr);

    short getN() const;
    void setN(short newN);
    int getInitialLenght() const;
    void setInitialLenght(int newInitialLenght);

signals:
    ///
    /// \brief endBuildCurve
    /// –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫—Ä–∏–≤–æ–π –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å
    void endBuildCurve();
    ///
    /// \brief newLineReady
    /// –æ–ø–æ–≤–µ—â–∞–µ—Ç –æ —Ç–æ–º, —á—Ç–æ –æ—á–µ—Ä–µ–¥–µ–Ω–∞—è –ø—Ä—è–º–∞—è –∫—Ä–∏–≤–æ–π
    /// –≥–æ—Ç–æ–≤–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
    void newLineReady(QLineF line);
};

#endif // SIERPINSKICURVE_H
